## Stage 1 : build with maven builder image with native capabilities
FROM quay.io/quarkus/centos-quarkus-maven:19.3.1-java11 AS build
COPY src /usr/src/app/src
COPY pom.xml /usr/src/app
USER root
RUN chown -R quarkus /usr/src/app
RUN chmod +x /usr/src/app/src/main/docker/wait-for-it.sh
USER quarkus
ENV QUARKUS_DATASOURCE_JDBC_URL jdbc:postgresql://customer_db_test:5432/dvdrentalcustomer
# RUN mvn -f /usr/src/app/pom.xml -Pnative clean package
RUN /usr/src/app/src/main/docker/wait-for-it.sh -t 60 customer_db_test:5432 -- mvn -f /usr/src/app/pom.xml -Pnative clean package

## Stage 2 : create the docker final image
FROM registry.access.redhat.com/ubi8/ubi-minimal
WORKDIR /work/
COPY --from=build /usr/src/app/target/*-runner /work/application

# set up permissions for user `1001`
RUN chmod 775 /work /work/application \
  && chown -R 1001 /work \
  && chmod -R "g+rwX" /work \
  && chown -R 1001:root /work

EXPOSE 8080
USER 1001
ENV QUARKUS_DATASOURCE_JDBC_URL jdbc:postgresql://customer_db:5432/dvdrentalcustomer
ENV QUARKUS_HTTP_PORT 8080

CMD ["./application", "-Dquarkus.http.host=0.0.0.0"]